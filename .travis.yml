# Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia
os:
  - linux
  - osx
julia:
  - 1.4
 # - 1.5
branches:
  only:
    - master
notifications:
  email: false
before_install:
  # linux
  # this was adapted from RCall
  #  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9; fi
  # - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository -y "deb http://cran.rstudio.com/bin/linux/ubuntu $(lsb_release -s -c)/"; fi
  # - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update -qq -y; fi
  # - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install --allow-unauthenticated git r-base r-base-dev r-recommended -y; fi
  # # install lme4 via apt to avoid compiling it
  # - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install --allow-unauthenticated git r-cran-lme4 -y; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install --allow-unauthenticated git r-cran-lme4 r-cran-afex -y; fi

  # osx
  # faster than using homebrew/science tap
  # but no permalink to release download
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then wget "https://cran.rstudio.com/bin/macosx/$(wget -qO- https://cran.rstudio.com/bin/macosx/ | sed -n 's/.*href="\(R-[^"]*.pkg\)".*/\1/p' | head -n 1)"; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then sudo installer -pkg R-*.pkg -target /; fi
addons:
  # this was adapted from afex's own tests and reading the Travis docs
  apt:
    sources:
      - sourceline: 'deb https://cloud.r-project.org/bin/linux/ubuntu xenial-cran40/'
        key_url: 'http://keyserver.ubuntu.com:11371/pks/lookup?op=get&search=0xe298a3a825c0d65dfd57cbb651716619e084dab9'
    packages:
      - libudunits2-dev
      - libv8-dev
      - libgsl-dev
      - libgdal-dev
      - libproj-dev
      - git 
      - r-base
      - r-base-dev 
      - r-recommended 
      # - r-cran-lme4
      # - r-cran-afex

after_success:
  - julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit(process_folder())'
  - julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; Coveralls.submit(process_folder())'
jobs:
  allow_failures:
    - julia: nightly
  fast_finish: true
  include:
    - stage: Documentation
      julia: 1.4
      script: julia --project=docs -e '
          using Pkg;
          Pkg.develop(PackageSpec(path=pwd()));
          Pkg.instantiate();
          include("docs/make.jl");'
      after_success: skip
